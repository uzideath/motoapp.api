// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  name           String
  identification String   @unique
  age            Int
  phone          String
  address        String
  createdAt      DateTime @default(now())

  loans Loan[]
}

model Motorcycle {
  id    String @id @default(uuid())
  brand String
  model String
  plate String @unique

  loans Loan[]
}

model Loan {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  motorcycle   Motorcycle @relation(fields: [motorcycleId], references: [id])
  motorcycleId String

  totalAmount           Float
  installments          Int
  paidInstallments      Int   @default(0)
  remainingInstallments Int
  totalPaid             Float @default(0.0)
  debtRemaining         Float

  startDate DateTime   @default(now())
  status    LoanStatus @default(PENDING)

  payments Installment[]
}

model Installment {
  id     String @id @default(uuid())
  loan   Loan   @relation(fields: [loanId], references: [id])
  loanId String

  amount      Float
  paymentDate DateTime @default(now())
  isLate      Boolean  @default(false)
}

enum LoanStatus {
  PENDING
  ACTIVE
  COMPLETED
  DEFAULTED
}
